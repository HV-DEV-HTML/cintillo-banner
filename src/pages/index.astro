---
import Layout from '@layouts/Layout.astro';
---

<Layout title='Cintillo Banner - Contador'>
	<div class="h-20 bg-white">
    <div class="w-full relative py-2.5 overflow-hidden bg-white" id="banner_cintillo"
      data-date-init="Set 8, 2025, 9:00:00 AM Central Daylight Time"
      data-date-end="Oct 23, 2025, 12:02:00 PM Central Daylight Time">
      
      <div class="w-full max-w-[1240px] mx-auto flex justify-center sm:w-[96%]">
        <!-- <a class="absolute top-0 left-0 z-1 w-full h-full opacity-0 cursor-pointer" 
           href="https://www.tiendaclaro.pe/?utm_campaign=cyber_claro&utm_source=medios_propios&utm_medium=claro_pe&utm_content=cintillo_home-cyberclaro_tiendaclaro&utm_term=postpago-portabilidad+renovacion&cu=cp1751883915" 
           target="_blank"></a> -->
        
        <div class="w-full max-w-[1000px] flex gap-4 md:gap-10 justify-center items-center relative">
          <!-- Header con logo -->
          <div class="flex grow-0">
            <img src="https://test-claro-pe.prod.clarodigital.net/portal/pe/recursos_contenido/135a9f3f-b876-4a00-9651-61e4a9822f6b-peru_ecuador.png" 
                 alt="CYBER WOW" 
                 width="128" 
                 height="35"
                 class="block h-auto self-center max-sm:max-w-[80px]">
          </div>
          
          <!-- Sección del contador -->
          <div class="flex justify-center md:mx-auto items-center flex-col md:flex-row countdown_section">
            <div class="pr-5 md:pr-[15px] max-sm:pr-0 max-sm:mx-auto max-sm:mb-[4.5px] max-sm:pl-2.5">
              <h3 class="font-amx-regular text-sm md:text-lg leading-none">
                Empieza en:
              </h3>
            </div>
            
            <div class="flex flex-wrap h-fit pt-1 md:pt-0" id="countdown">
              <!-- Days -->
              <dl class="flex flex-wrap h-fit">
                <dt data-top="DÍA" class="flex flex-wrap relative h-fit after:content-[attr(data-top)] after:font-amx-regular after:text-[6px] after:block after:pt-2.5 after:pl-0.5 after:-mr-1.5  max-sm:after:pt-0 max-sm:after:mt-0 max-sm:after:text-[5px] max-sm:after:-mr-3">
                  <h4 class="font-amx-black text-[22px] leading-normal h-fit md:text-[36px] max-sm:leading-[25px]">
                    <span class="dia_digito1"></span><span class="dia_digito2"></span>
                  </h4>
                </dt>
                <dd class="mx-[5px] h-fit max-sm:mx-1.5">
                  <h4 class="font-amx-black text-[25px] text-white leading-[47px] md:text-lg max-sm:text-lg max-sm:leading-[25px]">:</h4>
                </dd>
              </dl>
              
              <!-- Hours -->
              <dl class="flex flex-wrap h-fit">
                <dt data-top="HORAS" class="flex flex-wrap relative h-fit after:content-[attr(data-top)] after:font-amx-regular after:text-[6px] after:block after:pt-2.5 after:pl-0.5 after:-mr-1.5  max-sm:after:pt-0 max-sm:after:mt-0 max-sm:after:text-[5px] max-sm:after:-mr-3">
                  <h4 class="font-amx-black text-[22px] leading-normal h-fit md:text-[36px] max-sm:leading-[25px]">
                    <span class="hora_digito1"></span><span class="hora_digito2"></span>
                  </h4>
                </dt>
                <dd class="mx-[5px] h-fit max-sm:mx-1.5">
                  <h4 class="font-amx-black text-[25px] text-white leading-[47px] md:text-lg max-sm:text-lg max-sm:leading-[25px]">:</h4>
                </dd>
              </dl>
              
              <!-- Minutes -->
              <dl class="flex flex-wrap h-fit">
                <dt data-top="MIN" class="flex flex-wrap relative h-fit after:content-[attr(data-top)] after:font-amx-regular after:text-[6px] after:block after:pt-2.5 after:pl-0.5 after:-mr-1.5  max-sm:after:pt-0 max-sm:after:mt-0 max-sm:after:text-[5px] max-sm:after:-mr-3">
                  <h4 class="font-amx-black text-[22px] leading-normal h-fit md:text-[36px] max-sm:leading-[25px]">
                    <span class="minuto_digito1"></span><span class="minuto_digito2"></span>
                  </h4>
                </dt>
                <dd class="mx-[5px] h-fit max-sm:mx-1.5">
                  <h4 class="font-amx-black text-[25px] text-white leading-[47px] md:text-lg max-sm:text-lg max-sm:leading-[25px]">:</h4>
                </dd>
              </dl>
              
              <!-- Seconds -->
              <dl class="flex-wrap h-fit hidden md:flex">
                <dt data-top="SEG" class="flex flex-wrap relative h-fit after:content-[attr(data-top)] after:font-amx-regular after:text-[6px] after:block after:pt-2.5 after:pl-0.5 after:-mr-1.5  max-sm:after:pt-0 max-sm:after:mt-0 max-sm:after:text-[5px] max-sm:after:-mr-3">
                  <h4 class="font-amx-black text-[22px] leading-normal h-fit md:text-[36px] max-sm:leading-[25px]">
                    <span class="segundo_digito1"></span><span class="segundo_digito2"></span>
                  </h4>
                </dt>
              </dl>
            </div>
          </div>
          
          <!-- Botón de ver más -->
          <div class="grow-0 flex lg:pl-[1%] md:pr-[5%]">
            <a href="#" 
               target="_blank"
               class="font-amx-black text-[16px] leading-10 table rounded-[20px] self-center px-4 md:text-[15px] md:leading-9 max-sm:text-[11px] max-sm:px-2.5 max-sm:leading-[30px] view_more_btn">
              <span class="table-cell">Ver más</span>
            </a>
          </div>
          
          <!-- Botón de cierre -->
          <a class="absolute top-0 right-1 h-full flex justify-center items-center z-2 cursor-pointer lg:-right-[4%] md:right-0 closeElement">
            <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M17 1L1 17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              <path d="M1 1L17 17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </a>
        </div>
      </div>
    </div>
  </div>
</Layout>


<style is:inline>
    .headerEv+.wrapper {
      padding-top: 88px;
    }

    @media (min-width: 1024px) {
      .headerEv+.wrapper {
        padding-top: 96px;
      }
    }
		#banner_cintillo{
			--countdown-text-color: #DA291C;
			--countdown-btn-bg-color: #DA291C;
			--countdown-btn-text-color: #FFFFFF;
			--countdown-close-color: #5f5e5e;
		}
    #banner_cintillo .countdown_section{
			& h3{
				color: var(--countdown-text-color);
			}
			& h4{
				color: var(--countdown-text-color);
			}
		}
    #banner_cintillo .view_more_btn{
			background-color: var(--countdown-btn-bg-color);
			color: var(--countdown-btn-text-color);
		}
    #banner_cintillo .closeElement{
			color: var(--countdown-close-color);
		}
    #banner_cintillo.sticky {
      position: fixed;
      top: 55px;
      right: 0;
      left: 0;
      z-index: 10;
    }

    @media screen and (max-width: 820px) {
      #banner_cintillo.sticky {
        top: 50px;
      }
    }

    @media screen and (max-width: 660px) {
      #countdown {
        padding-top: 0px;
        height: 30px;
      }

      #banner_cintillo {
        padding: 10px 0;
      }
    }

    @media screen and (max-width: 540px) {
      #banner_cintillo {
        padding: 8px 0;
      }
    }
  </style>


<script>
  import { parseFechaCMS, startCountdown } from '@/utils/countdown.js';

  // Configuration
  const bannerId = 'banner_cintillo';
  const limitDesktop = 100;
  const limitMobile = 70;

  // Obtener elementos
  const counterElement = document.querySelector(`#banner_cintillo`) as HTMLElement;
  const closeElement = document.querySelector(`.closeElement`) as HTMLElement;
  
  if (!counterElement) {
    console.error(`Banner element with id "${bannerId}" not found`);
  } else {
    const limit = window.matchMedia("(max-width: 541px)").matches ? limitMobile : limitDesktop;

    // Obtener fechas a partir de atributos de datos
    const counterDateInit = counterElement.getAttribute('data-date-init');
    const counterDateEnd = counterElement.getAttribute('data-date-end');
    
    const now = new Date();
    const dateInit = parseFechaCMS(counterDateInit);
    console.log({dateInit});
    console.log(dateInit.toLocaleString());
    
    const dateEnd = parseFechaCMS(counterDateEnd);
    console.log({dateEnd});
    console.log(dateEnd.toLocaleString());
    
    let targetDate;
    let shouldShow = false;

    // Verificar si IS_DEVELOP está definido globalmente
    const isDevelopMode = typeof (window as any).IS_DEVELOP !== 'undefined' && (window as any).IS_DEVELOP;
		console.log( { isDevelopMode} )
    // Lógica de negocio: determinar si el banner debe mostrarse y qué fecha contar
    if (now < dateInit) {
      // Antes de iniciar
      targetDate = dateInit;
      shouldShow = isDevelopMode;
    } else if (now >= dateInit && now < dateEnd) {
      // En curso
      targetDate = dateEnd;
      shouldShow = true;
    } else {
      // Terminó
      shouldShow = isDevelopMode;
    }

    // Mostrar/ocultar banner y iniciar conteo
    if (shouldShow) {
      counterElement.style.display = 'block';
      startCountdown(targetDate);
    } else {
      counterElement.style.display = 'none';
    }

    // Comportamiento sticky al desplazarse
    window.addEventListener('scroll', function() {
      if (window.scrollY > limit) {
        counterElement.classList.add('sticky');
      } else {
        counterElement.classList.remove('sticky');
      }
    });

    // Botón de cierre
    if (closeElement) {
      closeElement.addEventListener('click', function() {
        counterElement.remove();
      });
    }
  }
</script>